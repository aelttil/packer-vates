packer {
  required_plugins {
    xenserver= {
     version = "= v0.7.3"
      source = "github.com/ddelnano/xenserver"
   }
  }
}

variable "template_logo_url" {
  type        = string
  description = "URL du logo du template pour les métadonnées"
  default     = "images/ubuntu.png"
}

variable "publisher_logo_url" {
  type        = string
  description = "URL du logo du publisher pour les métadonnées"
  default     = "images/cloudtemple.svg"
}

variable "publisher" {
  type        = string
  description = "Nom du owner du template"
  default     = "Cloud Temple"
}

variable "target_platform" {
  type        = string
  description = "Produit cible pour le template. Exemple OpenIaaS ou IaaS VMware"
  default     = "openiaas"
}
variable "remote_host" {
  type        = string
  description = "The ip or fqdn of your XCP-ng. It must be the master"
  sensitive   = true
  default     = "10.183.1.131"
}

variable "remote_username" {
  type        = string
  description = "The username used to interact with your XCP-ng"
  sensitive   = true
  default     = "root"
}

variable "remote_password" {
  type        = string
  description = "The password used to interact with your XCP-ng"
  sensitive   = true
  default     = "apqmapqm"
}

variable "sr_iso_name" {
  type        = string
  description = "The ISO-SR to packer will use"
  default     = "ISO"
}

variable "sr_name" {
  type        = string
  description = "The name of the SR to packer will use"
  default     = "Local storage"
}

variable "network_names" {
  type        = list(string)
  description = "List of network names to attach to the VM"
}


source "xenserver-iso" "debian12" {
  iso_checksum      = "cb089def0684fd93c9c2fbe45fd16ecc809c949a6fd0c91ee199faefe7d4b82b64658a264a13109d59f1a40ac3080be2f7bd3d8bf3e9cdf509add6d72576a79b"
  iso_url = "https://reks2ee2b1.s3.fr1.cloud-temple.com/packer-vates/ISO/debian-12.10.0-amd64-netinst.iso" #"https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-12.10.0-amd64-netinst.iso"

  sr_iso_name    = var.sr_iso_name
  sr_name        = var.sr_name
  tools_iso_name = ""

  remote_host     = var.remote_host
  remote_password = var.remote_password
  remote_username = var.remote_username

  http_directory = "packer/debian/http"

  boot_command =  [
        "<wait><wait><wait><esc><wait><wait><wait>",
        "/install.amd/vmlinuz ",
        "initrd=/install.amd/initrd.gz ",
        "auto=true ",
        "domain= ",
        "url=http://10.0.0.143:{{.HTTPPort}}/preseed.cfg ",
        "hostname=debian ",
        "interface=auto ",
        
        "netcfg/disable_autoconfig=true ",
        "netcfg/get_ipaddress=10.0.0.30 ",
        "netcfg/get_netmask=255.255.255.0 ",
        "netcfg/get_gateway=10.0.0.254 ",
        "netcfg/get_nameservers=8.8.8.8 ",
        "netcfg/confirm_static=true ",
        "vga=788 noprompt quiet--- <enter>"
  ]

  # Change this to match the ISO of ubuntu you are using in the iso_url variable
  clone_template = "Generic Linux BIOS"
  vm_name        = "template-debian-12"
  vm_description = "Template Debian 12 (12.10)... Default login : 'admct'. Default password: 'InitCT@2025'"
  vcpus_max	 = 4
  vcpus_atstartup = 2
  vm_memory      = 4096 #MB
  network_names = var.network_names
  disk_size      = 20480 #MB
  disk_name      = "debian-12-disk-0"
  vm_tags        = ["Generated by Packer", "Debian", "cloud-init"]

  ssh_username            = "admct"
  ssh_password            = "InitCT@2025"
  ssh_wait_timeout        = "60000s"
  ssh_handshake_attempts  = 10000

  output_directory = "packer-template-debian-12"

  # keep_vm = "on-success"__: Conserve la VM si le build réussit (idéal pour les tests)
  # keep_vm = "on-failure"__: Conserve la VM uniquement si le build échoue (utile pour déboguer)
  # keep_vm = "always"__: Conserve toujours la VM, quel que soit le résultat du build
  keep_vm          = "never"
  format = "xva_compressed"
}

build {
  sources = ["xenserver-iso.debian12"]

  provisioner "file" {
    source      = "packer/common/"
    destination = "/tmp/"
  }

  provisioner "file" {
    source      = "packer/debian/extras/"
    destination = "/tmp/"
  }

  # Exécution des scripts
  provisioner "shell" {
    inline = [
      "chmod +x /tmp/*.sh",

      # Scripts communs
      "sudo /tmp/update_system.sh",
      "sudo /tmp/harden_ssh.sh",
      "sudo /tmp/harden_system.sh",
      "sudo /tmp/setup_motd.sh",
      
      # Scripts spécifiques à Debian
      "sudo /tmp/install_xen_tools.sh",
      "sudo /tmp/debian_specific.sh",
      "sudo /tmp/cleanup.sh",
      
      # Suppression des scripts
      "rm -f /tmp/*.sh"
    ]
  }
}
